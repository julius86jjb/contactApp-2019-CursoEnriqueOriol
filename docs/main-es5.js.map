{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/contact-detail/add-contact/add-contact.component.ts","webpack:///src/app/contact-detail/contact-detail-resolver.service.ts","webpack:///src/app/contact-detail/contact-detail-shell/contact-detail-shell.component.ts","webpack:///src/app/contact-detail/contact-detail-shell/contact-detail-shell.component.html","webpack:///src/app/contact-detail/contact-detail.component.ts","webpack:///src/app/contact-detail/contact-detail.component.html","webpack:///src/app/contact-detail/contact-detail.module.ts","webpack:///src/app/contact-detail/contact-form/contact-form.component.html","webpack:///src/app/contact-detail/contact-form/contact-form.component.ts","webpack:///src/app/contact-detail/edit-contact/edit-contact.component.ts","webpack:///src/app/contact.model.ts","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/contacts-list/contacts-list.component.ts","webpack:///src/app/contacts-list/contacts-list.component.html","webpack:///src/app/contacts.service.ts","webpack:///src/app/directives/startsWithCapital.directive.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/log-out/log-out.component.ts","webpack:///src/app/log-out/log-out.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/app/title.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","appRoutes","path","component","data","title","canActivate","outlet","redirectTo","pathMatch","AppRoutingModule","forRoot","enableTracing","useHash","imports","AppComponent","authService","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuard","router","next","state","checkLogin","url","user","redirectUrl","navigate","providedIn","AuthService","JSON","parse","localStorage","getItem","name","email","token","pipe","setItem","stringify","removeItem","AddContactComponent","contactsService","contact","addContact","saveInLocalStorage","template","ContactDetailResolverService","route","Number","paramMap","get","getContactById","ContactDetailShellComponent","ContactDetailComponent","subscribe","contactDetailRoutes","children","ContactDetailModule","forChild","ContactFormComponent","fb","submitContact","valueChanges","phoneTypes","Object","values","pictureFile","contactForm","group","required","minLength","picture","phones","array","type","number","address","setContact","statusChanges","value","formValue","emit","reset","clear","addNewPhoneToModel","i","length","setValue","cleanContact","push","event","file","target","files","reader","FileReader","readAsDataURL","onload","evt","patchValue","result","submitForm","addImage","EditContactComponent","contactService","formContact","updateContact","Contact","PhoneType","ContactComponent","clicked","onClick","ContactsListComponent","contacts$","removeContact","ContactsService","contactsSubject","asObservable","contacts","loadContacts","contactMatches","filter","item","work","home","mobile","replaceIndex","findIndex","newContacts","slice","startsWithCapitalValidator","control","valid","test","StartsWithCapitalValidatorDirective","isActive","provide","useExisting","multi","HeaderComponent","titleService","LogOutComponent","closePopup","logout","redirectRoute","outlets","primary","popup","cancel","leave","LoginComponent","login","destination","parseUrl","navigateByUrl","NotFoundComponent","TitleService","activatedRoute","titleSubject","title$","init","events","firstChild","console","log","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes} from '@angular/router';\r\n\r\nimport { ContactsListComponent } from './contacts-list/contacts-list.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LogOutComponent } from './log-out/log-out.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: 'contacts',\r\n      component: ContactsListComponent,\r\n      data:{title: \"Contacts\"},\r\n      canActivate: [ AuthGuard ]\r\n    },\r\n    { path: 'login', component: LoginComponent, data:{title: \"Login\"} },\r\n    { path: 'logout', component: LogOutComponent, outlet:'popup', canActivate : [ AuthGuard ]},\r\n    { path: 'not-found', component:NotFoundComponent, data:{title: \"Ooops! 404\"}},\r\n    { path: '',\r\n      redirectTo: '/contacts',\r\n      pathMatch: 'full'\r\n    },\r\n    { path: '**', redirectTo: 'not-found', pathMatch:'full' }\r\n  ];\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(appRoutes, { enableTracing: true, useHash: true }),\r\n    ],\r\n    exports:[\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule { };\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  constructor(public authService:AuthService) { }\r\n}\r\n","<app-header title=\"My contacts app\">\r\n    <a routerLink=\"/contacts\" routerLinkActive=\"active-link\">Contacts</a>\r\n    <a routerLink=\"/contact-detail\" routerLinkActive=\"active-link\">Contact detail</a>\r\n    <a routerLink=\"/login\" *ngIf=\"!authService.user\" routerLinkActive=\"active-link\">Login</a>\r\n    <a *ngIf=\"authService.user\" [routerLink]=\"[{ outlets: { popup: ['logout'] } }]\">Logout</a>\r\n</app-header>\r\n\r\n<router-outlet></router-outlet>\r\n<router-outlet name=\"popup\"></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ContactsListComponent } from './contacts-list/contacts-list.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { LogOutComponent } from './log-out/log-out.component';\r\n\r\nimport { ContactDetailModule } from './contact-detail/contact-detail.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ContactsListComponent,\r\n    ContactComponent,\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    NotFoundComponent,\r\n    LogOutComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ContactDetailModule,\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private authService:AuthService, private router:Router){ }\r\n\r\n    canActivate( next: ActivatedRouteSnapshot, state: RouterStateSnapshot):boolean{\r\n        return this.checkLogin(state.url);\r\n    }\r\n\r\n    checkLogin(url:string){\r\n        if(this.authService.user != null){\r\n            return true;\r\n        }\r\n        this.authService.redirectUrl = url;\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport {of, Observable} from 'rxjs';\r\nimport {delay, tap} from 'rxjs/operators';\r\nimport { User } from './user.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  public user:User = null;\r\n  public redirectUrl:string = null;\r\n\r\n  constructor() {\r\n    this.user = JSON.parse(localStorage.getItem(\"user\"));\r\n   }\r\n\r\n  login():Observable<User>{\r\n    return of({name:\"Peter\", email:\"peter@gmail.com\", token:\"123456789\"}).pipe(\r\n      delay(750),\r\n      tap(user => this.user = user),\r\n      tap(user => localStorage.setItem(\"user\", JSON.stringify(user)))\r\n    );\r\n  }\r\n\r\n  logout(){\r\n    this.user = null;\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ContactsService } from 'src/app/contacts.service';\r\nimport { Contact } from 'src/app/contact.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-contact',\r\n  template: `<app-contact-form \r\n                [contact]=\"contact\" \r\n                (valueChanges)=\"saveInLocalStorage($event)\"\r\n                (submitContact)=\"addContact($event)\">\r\n                Add contact\r\n              </app-contact-form>`\r\n})\r\nexport class AddContactComponent implements OnInit {\r\n  \r\n  public contact: Contact;\r\n  \r\n  constructor(\r\n    private contactsService: ContactsService,\r\n    private router:Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const contact = localStorage.getItem('contact');\r\n    if (contact) {\r\n      this.contact = JSON.parse(contact);\r\n    }\r\n  }\r\n\r\n  saveInLocalStorage(contact) {\r\n    localStorage.setItem('contact', JSON.stringify(contact));\r\n  }\r\n\r\n  addContact(contact) {\r\n    this.contactsService.addContact(contact);\r\n    localStorage.removeItem('contact');\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Contact } from '../contact.model';\r\nimport { ContactsService } from '../contacts.service';\r\nimport { of, EMPTY, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ContactDetailResolverService implements Resolve<Contact> {\r\n    constructor(\r\n        private contactsService:ContactsService, \r\n        private router:Router\r\n    ){ }\r\n\r\n    resolve(route:ActivatedRouteSnapshot, state:RouterStateSnapshot):Observable<Contact>{\r\n        const id = Number(route.paramMap.get('id'));\r\n        const contact = this.contactsService.getContactById(id);\r\n\r\n        if(contact){\r\n            return of(contact);\r\n        }else{\r\n            this.router.navigate(['/not-found']);\r\n            return EMPTY;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact-detail-shell',\r\n  templateUrl: './contact-detail-shell.component.html',\r\n})\r\nexport class ContactDetailShellComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<router-outlet #childRoute=\"outlet\"></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { ContactsService } from '../contacts.service';\r\nimport { Contact } from '../contact.model';\r\n\r\n@Component({\r\n  selector: 'app-contact-detail',\r\n  templateUrl: './contact-detail.component.html',\r\n  styleUrls: ['./contact-detail.component.scss']\r\n})\r\nexport class ContactDetailComponent implements OnInit {\r\n\r\n  public contact:Contact;\r\n\r\n  constructor(\r\n    public contactsService:ContactsService, \r\n    public route:ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => this.contact = data.contact);\r\n  }\r\n\r\n}\r\n","<div class=\"contact\">\r\n  <div class=\"contact-header\">\r\n    <img class=\"contact-header-image\" [src]=\"contact.picture\">\r\n    <h1 class=\"contact-header-name\">{{contact.name}}</h1>\r\n  </div>\r\n  \r\n  <div class=\"contact-detail\">\r\n      <div class=\"contact-detail-phone\">\r\n          <h2>Phones</h2>\r\n          <p *ngFor=\"let phone of contact.phones\">\r\n            <span class=\"contact-detail-phone-type\">({{phone.type}}) - </span>\r\n            <span class=\"contact-detail-phone-number\">{{phone.number}}</span>\r\n          </p>\r\n        </div>\r\n        <div class=\"contact-detail-email\">\r\n          <h2>Email</h2>\r\n          <p>{{contact.email}}</p>\r\n        </div>\r\n        <div class=\"contact-detail-address\">\r\n          <h2>address</h2>\r\n          <p>{{contact.address}}</p>\r\n        </div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router'; \r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ContactDetailComponent } from './contact-detail.component';\r\nimport { ContactDetailShellComponent } from './contact-detail-shell/contact-detail-shell.component';\r\nimport { ContactDetailResolverService } from './contact-detail-resolver.service';\r\nimport { AuthGuard } from '../auth/auth.guard';\r\nimport { ContactFormComponent } from './contact-form/contact-form.component';\r\nimport { StartsWithCapitalValidatorDirective } from '../directives/startsWithCapital.directive';\r\nimport { EditContactComponent } from './edit-contact/edit-contact.component';\r\nimport { AddContactComponent } from './add-contact/add-contact.component';\r\n\r\nconst contactDetailRoutes:Routes = [\r\n    { path: 'contact-detail', component: ContactDetailShellComponent, data:{title: \"Contact detail\"},\r\n    children: [\r\n      { path: '', component:AddContactComponent },\r\n      { path: 'edit/:id', component:EditContactComponent, \r\n        resolve:{ contact:ContactDetailResolverService } \r\n      },\r\n      { path: ':id', component:ContactDetailComponent, \r\n        resolve:{ contact:ContactDetailResolverService }\r\n      }\r\n    ],\r\n    canActivate: [ AuthGuard ] \r\n  },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(contactDetailRoutes),\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations:[\r\n        ContactDetailComponent,\r\n        ContactDetailShellComponent,\r\n        ContactFormComponent,\r\n        StartsWithCapitalValidatorDirective,\r\n        EditContactComponent,\r\n        AddContactComponent\r\n    ]\r\n\r\n})\r\nexport class ContactDetailModule { }","<form [formGroup]=\"contactForm\" (ngSubmit)=\"submitForm()\">    \r\n    <!-- image field -->\r\n    <div class=\"form-item-image\">\r\n        <img [src]=\"contactForm.value.picture\">\r\n        <input type=\"file\" accept=\".png,.jpg,.jpeg\" (change)=addImage($event)>\r\n    </div>\r\n\r\n    <!-- name field -->\r\n    <div class=\"form-item\">\r\n        <label for=\"name\">Name:</label>\r\n        <input type=\"text\" id=\"name\" formControlName=\"name\">\r\n        <ng-container *ngIf=\"!name.valid && name.touched\">\r\n            <p *ngIf=\"name.errors.required\" class=\"error-message\">\r\n                This field is required!!\r\n            </p>\r\n            <p *ngIf=\"name.errors.minlength\" class=\"error-message\">\r\n                A name needs at least 2 characters!!\r\n            </p>\r\n            <p *ngIf=\"name.errors.startsWithCapital && !name.errors.minlength\" class=\"error-message\">\r\n                The name should start with capital letter!!\r\n            </p>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <!-- phones field -->\r\n    <div class=\"form-group\" formArrayName=\"phones\">\r\n        <p>Phones:</p>\r\n        <div class=\"form-item\" *ngFor=\"let phone of phones.controls; let i=index\" [formGroupName]=\"i\">\r\n            <label for=\"phone-type\">Phone</label>\r\n            <select id=\"phone-type\" formControlName=\"type\">\r\n                <option [value]=\"type\" *ngFor=\"let type of phoneTypes\">{{type}}</option>\r\n            </select>\r\n            <input type=\"tel\" id=\"phone-number\" formControlName=\"number\">\r\n        </div>\r\n        <p class=\"form-action\" (click)=\"addNewPhoneToModel()\">Add phone +</p>\r\n    </div>\r\n\r\n    <!-- email field -->\r\n    <div class=\"form-item\">\r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"text\" id=\"email\" formControlName=\"email\">\r\n    </div>\r\n\r\n    <!-- address field -->\r\n    <div class=\"form-item\">\r\n        <label for=\"address\">Adress:</label>\r\n        <input type=\"text\" id=\"address\" formControlName=\"address\">\r\n    </div>\r\n\r\n    <!-- submit button -->\r\n    <button class=\"form-button\" type=\"submit\" [disabled]=\"contactForm.invalid\">\r\n        <ng-content></ng-content>\r\n    </button>\r\n    \r\n</form>","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { Contact, PhoneType } from 'src/app/contact.model';\r\nimport { FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { startsWithCapitalValidator } from 'src/app/directives/startsWithCapital.directive';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { zip } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-contact-form',\r\n  templateUrl: './contact-form.component.html',\r\n  styleUrls: ['./contact-form.component.scss']\r\n})\r\nexport class ContactFormComponent implements OnInit {\r\n\r\n  @Input() contact:Contact;\r\n  @Output() submitContact:EventEmitter<Contact> = new EventEmitter();\r\n  @Output() valueChanges:EventEmitter<Contact> = new EventEmitter();\r\n  \r\n  public readonly phoneTypes:string[] = Object.values(PhoneType);\r\n  private pictureFile:File = null;\r\n\r\n  public contactForm = this.fb.group({\r\n    name: ['', [ Validators.required, Validators.minLength(2), startsWithCapitalValidator() ]],\r\n    picture: ['assets/default-user.png'],\r\n    phones: this.fb.array([\r\n      this.fb.group({\r\n        type: [null],\r\n        number: ['']\r\n      })\r\n    ]),\r\n    email: [''],\r\n    address: ['']\r\n  });\r\n\r\n  constructor(private fb:FormBuilder) { }\r\n\r\n  ngOnInit(){\r\n    //init contact from input, if exists\r\n    if(this.contact)\r\n      this.setContact(this.contact);\r\n\r\n    //emit value changes only when status is valid\r\n    zip(this.contactForm.statusChanges, this.contactForm.valueChanges).pipe(\r\n      filter( ([state, value]) => state == 'VALID' ),\r\n      map(([state, value]) => value),\r\n    ).subscribe(formValue => {\r\n      this.valueChanges.emit(formValue);\r\n    });\r\n  }\r\n\r\n  submitForm(){\r\n    //emit submission\r\n    this.submitContact.emit({...this.contactForm.value, pictureFile:this.pictureFile});\r\n    //reset form\r\n    this.contactForm.reset({\r\n      picture:'assets/default-user.png',\r\n    });\r\n    //and clear structure\r\n    this.phones.clear();\r\n    this.addNewPhoneToModel();\r\n  }\r\n\r\n  //update contact form values from input contact\r\n  private setContact(contact){\r\n    this.contactForm.reset();\r\n    this.phones.clear();\r\n    for(let i=0; i< contact.phones.length; i++){\r\n      this.addNewPhoneToModel();\r\n    }\r\n    //extract picture file from contact, so there's no missmatch with form structure\r\n    const {pictureFile, ...cleanContact} = contact;\r\n    this.contactForm.setValue(cleanContact);\r\n  }\r\n\r\n  //add new phone to the phones array\r\n  addNewPhoneToModel(){\r\n    this.phones.push(\r\n      this.fb.group({\r\n        type: [null],\r\n        number: ['']\r\n      })\r\n    );\r\n  }\r\n\r\n  //add image to the form, from file input\r\n  addImage(event){\r\n    const file = event.target.files[0];\r\n    this.pictureFile = file;\r\n    var reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = (evt) => {\r\n      this.contactForm.patchValue({\r\n        picture:reader.result\r\n      });\r\n    }\r\n  }\r\n\r\n  get name(){\r\n    return this.contactForm.get('name');\r\n  }\r\n\r\n  get phones(){\r\n    return this.contactForm.get('phones') as FormArray;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ContactsService } from 'src/app/contacts.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Contact } from 'src/app/contact.model';\r\n\r\n@Component({\r\n  selector: 'app-edit-contact',\r\n  template: `<app-contact-form \r\n              [contact]=\"contact\" \r\n              (submitContact)=\"updateContact($event)\">\r\n              Update contact\r\n            </app-contact-form>`\r\n})\r\nexport class EditContactComponent implements OnInit {\r\n  public contact:Contact;\r\n  public id:number;\r\n  constructor(\r\n    public contactService:ContactsService, \r\n    public route:ActivatedRoute,\r\n    private router:Router,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      //use spread operator to separate id from the rest of the contact field\r\n      const {id, ...contact} = data.contact;\r\n      this.contact = contact;\r\n      this.id = id;\r\n    });\r\n  }\r\n\r\n  updateContact(formContact){\r\n    this.contactService.updateContact({id:this.id, ...formContact});\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n}\r\n","export class Contact{\r\n    constructor(\r\n        public id:number,\r\n        public name:string,\r\n        public picture:string,\r\n        public phones:ContactPhoneI[],\r\n        public email:string,\r\n        public address:string,\r\n        public pictureFile?:File\r\n    ){ }\r\n}\r\n\r\nexport interface ContactPhoneI{\r\n    type:PhoneType;\r\n    number:number;\r\n}\r\n\r\nexport enum PhoneType{\r\n    mobile = 'mobile',\r\n    home = 'home',\r\n    work = 'work'\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Contact } from '../contact.model';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.scss']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n  @Input() contact: Contact;\r\n  @Output() clicked: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClick(){\r\n    this.clicked.emit(this.contact.id);\r\n  }\r\n\r\n}\r\n","<div class=\"contact\" (click)=\"onClick()\">\r\n  <img class=\"contact-image\" [src]=\"contact.picture\">\r\n  <div class=\"contact-detail\">\r\n    <h1 class=\"contact-detail-name\">{{contact.name}}</h1>\r\n    <p class=\"contact-detail-phone\" *ngIf=\"contact.phones?.length\">\r\n      <span class=\"contact-detail-phone-type\">({{contact.phones[0].type}}) - </span>\r\n      <span class=\"contact-detail-phone-number\">{{contact.phones[0].number}}</span>\r\n    </p>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Contact } from '../contact.model';\r\nimport { ContactsService } from '../contacts.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-contacts-list',\r\n  templateUrl: './contacts-list.component.html',\r\n  styleUrls: ['./contacts-list.component.scss']\r\n})\r\nexport class ContactsListComponent implements OnInit {\r\n  public contacts$:Observable<Contact[]>;\r\n  constructor(\r\n    public contactsService:ContactsService, \r\n    public router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.contacts$ = this.contactsService.contacts$;\r\n  }\r\n\r\n  deleteContact(contact){\r\n    this.contactsService.removeContact(contact);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"contacts-list\">\r\n        <div class=\"list-item\" *ngFor=\"let contact of contacts$ | async\">\r\n            <app-contact\r\n            [contact]=\"contact\"\r\n            [routerLink]=\"['/contact-detail', contact.id]\">\r\n            </app-contact>\r\n            <div class=\"actions\">\r\n                <div class=\"edit action\" [routerLink]=\"['/contact-detail/edit/', contact.id]\"></div>\r\n                <div class=\"delete action\" (click)=\"deleteContact(contact)\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Contact, PhoneType} from './contact.model';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ContactsService {\r\n    private contactsSubject = new BehaviorSubject<Contact[]>([]);\r\n    public contacts$:Observable<Contact[]> = this.contactsSubject.asObservable();\r\n\r\n    constructor() { \r\n        const contacts = this.loadContacts();\r\n        this.contactsSubject.next(contacts);\r\n    }\r\n\r\n    getContactById(id){\r\n        let contactMatches = this.contactsSubject.value.filter(item => item.id === id);\r\n        return contactMatches.length ? contactMatches[0] : null;\r\n    }\r\n\r\n    private loadContacts(){\r\n        return [\r\n            new Contact(1, \"Albert\", \"assets/default-user.png\", [\r\n                {type:PhoneType.work, number:93200621621 },\r\n                {type:PhoneType.home, number:93444001100 },\r\n                {type:PhoneType.mobile, number:629304050 } \r\n            ], \"albert@email.com\", \"Villaroel 52, 08027, Barcelona\" ), \r\n            new Contact(2, \"Beckie\", \"assets/default-user.png\", [ \r\n                { type:PhoneType.mobile, number:111223344 },\r\n            ], \"\", \"\" ),\r\n            new Contact(3, \"Johan\", \"assets/default-user.png\", [\r\n                {type:PhoneType.home, number:123456789 },\r\n                {type:PhoneType.mobile, number:111111122 } \r\n            ], \"johan@email.com\", \"Raval 7, 08020, Barcelona\" ),\r\n            new Contact(4, \"Martin\", \"assets/default-user.png\", [\r\n                {type:PhoneType.work, number:222334455 },\r\n                {type:PhoneType.mobile, number:222222222 } \r\n            ], \"martin@email.com\", \"Boquería 12, 08021, Barcelona\" ),\r\n            new Contact(5, \"Samantha\", \"assets/default-user.png\", [\r\n                {type:PhoneType.work, number:931224455 },\r\n                {type:PhoneType.home, number:934122233 },\r\n                {type:PhoneType.mobile, number:662113344 } \r\n            ], \"samantha@email.com\", \"Plaza Pau Vila 1, 08039, Barcelona\" ),  \r\n            new Contact(6, \"Kaycee\", \"assets/default-user.png\", [\r\n                {type:PhoneType.mobile, number:939876655 },\r\n            ], \"kaycee@email.com\", \"Arago 356, 08032, Barcelona\" ),                        \r\n        ]\r\n    }\r\n\r\n    public addContact(contact:Contact){\r\n        if(!contact.picture)\r\n            contact.picture = \"assets/default-user.png\";\r\n        if(!contact.id)\r\n            contact.id = this.contactsSubject.value.length + 1;            \r\n        this.contactsSubject.next([...this.contactsSubject.value, contact ]);\r\n    }\r\n\r\n    public updateContact(contact:Contact){\r\n        const contacts = this.contactsSubject.value;\r\n        let replaceIndex = contacts.findIndex( item => item.id == contact.id);\r\n        const newContacts = [\r\n            ...contacts.slice(0,replaceIndex), \r\n            contact, \r\n            ...contacts.slice(replaceIndex+1)\r\n        ];\r\n        this.contactsSubject.next(newContacts);\r\n    }\r\n\r\n    public removeContact(contact:Contact){\r\n        const contacts = this.contactsSubject.value;\r\n        let replaceIndex = contacts.findIndex( item => item.id == contact.id);\r\n        const newContacts = [\r\n            ...contacts.slice(0,replaceIndex), \r\n            ...contacts.slice(replaceIndex+1)\r\n        ];\r\n        this.contactsSubject.next(newContacts);                \r\n    }\r\n\r\n}","import { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\r\nimport { Directive, Input } from '@angular/core';\r\n\r\n\r\nexport function startsWithCapitalValidator():ValidatorFn{\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n        if(!control.value){\r\n            return null;\r\n        } \r\n        const valid = /^[A-Z]/.test(control.value);\r\n        return valid ? null : {'startsWithCapital':{value:control.value}};\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[startsWithCapital]',\r\n    providers: [{provide: NG_VALIDATORS, useExisting: StartsWithCapitalValidatorDirective, multi: true}]\r\n})\r\nexport class StartsWithCapitalValidatorDirective implements Validator{\r\n    @Input('startsWithCapital') isActive:boolean;\r\n\r\n    validate(control:AbstractControl):(ValidationErrors | null){\r\n        return !this.isActive ? null : startsWithCapitalValidator()(control);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { TitleService } from '../title.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor(public titleService:TitleService){ }\r\n\r\n  ngOnInit() {\r\n  } \r\n\r\n}\r\n","<div class=\"container sticky-header\">\r\n  \r\n  <h1>{{titleService.title$ | async}}</h1>\r\n\r\n  <div class=\"buttons\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-log-out',\r\n  templateUrl: './log-out.component.html',\r\n  styleUrls: ['./log-out.component.scss']\r\n})\r\nexport class LogOutComponent implements OnInit {\r\n\r\n  constructor(private router:Router, private authService:AuthService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  cancel(){\r\n    this.closePopup();\r\n  }\r\n\r\n  leave(){\r\n    this.authService.logout();\r\n    this.closePopup('login');\r\n  }  \r\n\r\n  closePopup(redirectRoute?){\r\n    if(redirectRoute){\r\n      this.router.navigate([{outlets: {primary:redirectRoute, popup:null}}]);\r\n    }\r\n    else{\r\n      this.router.navigate([{outlets: {popup:null}}]);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <p>Are you sure you want to leave?</p>\r\n  <div class=\"buttons\">\r\n    <button class=\"button\" (click)=\"cancel()\">Cancel</button>\r\n    <button class=\"button\" (click)=\"leave()\">Leave</button>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  \r\n  constructor(private router:Router, private authService:AuthService) { }\r\n  \r\n  ngOnInit() {\r\n  }\r\n\r\n  login(){\r\n    this.authService.login().subscribe(user => {\r\n      if(user != null){\r\n        const destination = this.authService.redirectUrl ? \r\n        this.router.parseUrl(this.authService.redirectUrl) : '';\r\n        this.router.navigateByUrl(destination);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <p>Please, click to access</p>\r\n    <a class=\"button\" (click)=\"login()\">Log in!</a>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <p>Sorry, this page does not exist :(</p>\r\n  <a routerLink=\"/contacts\" class=\"button\">Bring me home!</a>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { map, filter, switchMap, mapTo, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TitleService {\r\n    private titleSubject:Subject<string> = new Subject();\r\n    public title$:Observable<string> = this.titleSubject.asObservable();\r\n\r\n    constructor(\r\n        private router:Router,\r\n        private activatedRoute:ActivatedRoute\r\n    ){ \r\n        this.init();\r\n    }\r\n\r\n    init(){\r\n        this.router.events.pipe(\r\n            filter(event => event instanceof NavigationEnd),\r\n            mapTo(this.activatedRoute),\r\n            switchMap(route => route.firstChild.data),\r\n            tap(data => console.log(\"DATA: \", data)),\r\n            map(data => data.title)\r\n        ).subscribe(title => this.titleSubject.next(title));\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}